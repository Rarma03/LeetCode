//TLE solution
class Solution {
public:
    long long zeroFilledSubarray(vector<int>& n) {
        long long ans=0;
        for(int i=0;i<n.size();i++){
            if(n[i]==0){
                for(int j=i+1;j<n.size();j++){
                    if(n[j]!=0){break;}
                    else{ans++;}
                }
                ans++;
            }
        }
        return ans;
    }
};
//O(1) Solution
class Solution {
public:
    long long zeroFilledSubarray(vector<int>& n) {
        long long ans=0;
        long long count=0;
        for(int i=0;i<n.size();i++){
            if(n[i]==0){
                count++;
            }
            else{
                ans += (count*(count+1))/2;
                count=0;
            }
        }
        if(count != 0){
            ans += (count*(count+1))/2;
        }
        return ans;
    }
};
