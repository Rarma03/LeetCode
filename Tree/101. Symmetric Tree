/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool symm(TreeNode *l,TreeNode *r){
        if(l==nullptr && r==nullptr){
            return true;
        }
        if(l == NULL || r==NULL ||l->val != r->val){
            return false;
        }
        bool i=symm(l->left,r->right);
        bool j=symm(l->right,r->left);
        // cout<<i<<j;
        return i and j;
        // return symm(l->left,r->right)&&symm(l->right,r->left);
    }
    bool isSymmetric(TreeNode* root) {
        if(root==nullptr){return true;}
        return symm(root->left,root->right);        
    }
};
